{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["//1) Використовуючи делегуваня, відстежуй на формі \n//подію input і щоразу записуй у локальне сховище \n//об'єкт з полями email і message, у яких зберігай \n//поточні значення полів форми.Нехай ключем для\n//сховища буде рядок \"feedback-form-state\".\n// 2) Під час завантаження сторінки перевіряй стан \n//сховища, і якщо там є збережені дані, то \n//заповнюй ними поля форми.В іншому випадку \n//поля повинні бути порожніми.\n//3) Під час сабміту форми очищай сховище і поля \n//форми, а також виводь у консоль об'єкт з полями \n//email, message та їхніми поточними значеннями.\nconst form = document.querySelector(\".feedback-form\")\nform.addEventListener(\"input\", handleInput);\nform.addEventListener(\"submit\", handleSubmit)\nfunction handleInput(event) {\n    event.preventDefault()\n    const email = form.elements.email.value;\n    const message = form.elements.message.value\n    const data = {\n        email: email,\n        message: message\n    };\n    localStorage.setItem(\"feedback-form-state\", JSON.stringify(data));\n}\nfunction handleSubmit(event) {\n    event.preventDefault()\n    const email = form.elements.email.value;\n    const message = form.elements.message.value;\n    localStorage.removeItem(\"feedback-form-state\");\n    form.reset()\n}\n \n"],"names":["form","handleInput","handleSubmit","event","email","message","data"],"mappings":"oDAYA,MAAMA,EAAO,SAAS,cAAc,gBAAgB,EACpDA,EAAK,iBAAiB,QAASC,CAAW,EAC1CD,EAAK,iBAAiB,SAAUE,CAAY,EAC5C,SAASD,EAAYE,EAAO,CACxBA,EAAM,eAAgB,EACtB,MAAMC,EAAQJ,EAAK,SAAS,MAAM,MAC5BK,EAAUL,EAAK,SAAS,QAAQ,MAChCM,EAAO,CACT,MAAOF,EACP,QAASC,CACjB,EACI,aAAa,QAAQ,sBAAuB,KAAK,UAAUC,CAAI,CAAC,CACpE,CACA,SAASJ,EAAaC,EAAO,CACzBA,EAAM,eAAgB,EACRH,EAAK,SAAS,MAAM,MAClBA,EAAK,SAAS,QAAQ,MACtC,aAAa,WAAW,qBAAqB,EAC7CA,EAAK,MAAO,CAChB"}